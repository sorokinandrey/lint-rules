apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

def projectGroupId = rootProject.ext.group
def versionName = rootProject.ext.version
def projectName = rootProject.ext.projectName


publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/aarWrapper-release.aar")
            groupId projectGroupId
            artifactId projectName
            version versionName

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    pkg {
        repo = 'upday-maven'
        name = projectName
        userOrg = 'upday'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/upday/lint-rules.git'
        version {
            name = versionName
            desc = 'Custom lint rules for daily upday Android development work.'
            vcsTag = versionName
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
    publications = ['Production']
}